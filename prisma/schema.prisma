// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Roles {
  id          Int    @id @default(autoincrement())
  values      String @unique
  description String

  owners RolesOnOwners[]
}

model Owner {
  id   Int    @id @default(autoincrement())
  name String

  roles RolesOnOwners[]
}

model RolesOnOwners {
  owner    Owner @relation(fields: [owner_id], references: [id])
  owner_id Int
  roles    Roles @relation(fields: [roles_id], references: [id])
  roles_id Int

  @@id([roles_id, owner_id])
}

model Cat {
  id   Int    @id @default(autoincrement())
  name String

  breed    Breed @relation(fields: [breed_id], references: [id])
  breed_id Int
}

model Breed {
  id   Int    @id @unique @default(autoincrement())
  name String

  cats Cat[]
}

// model CatPassport { Связь один к одному к кошке
// id   Int    @id @unique @default(autoincrement())
// passport_id непонятно нужно или нет
//   cat
// }

// enum UserActive{
// active,
// notActive
//
// }
//
//
// кошка <-> хозяин  = m2m
// коша <-> порода = one to many
// кошка  <-> паспорт = one to one
