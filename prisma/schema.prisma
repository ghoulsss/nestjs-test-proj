// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int    @id @default(autoincrement())
  value       String @unique
  description String

  owners RolesOnOwners[]

  @@map("roles")
}

model Owner {
  id   Int    @id @default(autoincrement())
  name String

  email String  @unique
  phone String?

  roles RolesOnOwners[]
  cats  Cat[]

  @@map("owners")
}

model RolesOnOwners {
  owner    Owner @relation(fields: [owner_id], references: [id])
  owner_id Int

  roles    Role @relation(fields: [roles_id], references: [id])
  roles_id Int

  @@id([roles_id, owner_id])
  @@map("rolesonowners")
}

model Cat {
  id   Int    @id @default(autoincrement())
  name String
  age  Int

  breed    Breed @relation(fields: [breed_id], references: [id])
  breed_id Int

  owner    Owner @relation(fields: [owner_id], references: [id])
  owner_id Int

  passport CatPassport?

  @@map("cats")
}

model Breed {
  id   Int    @id @unique @default(autoincrement())
  name String

  cats Cat[]

  @@map("breeds")
}

model CatPassport {
  id             Int    @id @unique @default(autoincrement())
  passportNumber String @unique

  cat   Cat @relation(fields: [catId], references: [id])
  catId Int @unique

  @@map("catpassports")
}

// enum UserActive{
// active,
// notActive
// }
